% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_stan_summary.R
\name{tar_stan_summary}
\alias{tar_stan_summary}
\title{One summary of a \code{CmdStanFit} object.}
\usage{
tar_stan_summary(fit, data, summaries, summary_args, variables)
}
\arguments{
\item{fit}{Symbol, name of a \code{CmdStanFit} object or an upstream target
that returns a \code{CmdStanFit} object.}

\item{data}{Code to generate the \code{data} for the Stan model.}

\item{summaries}{Optional list of summary functions passed to \code{...} in
\code{posterior::summarize_draws()} through \verb{$summary()}
on the \code{CmdStanFit} object.}

\item{summary_args}{Optional list of summary function arguments passed to
\code{.args} in \code{posterior::summarize_draws()} through \verb{$summary()}
on the \code{CmdStanFit} object.}

\item{variables}{(character vector) The variables to include.}
}
\value{
A target object to summarize a \code{CmdStanFit} object.

Target objects represent skippable steps of the analysis pipeline
as described at \url{https://books.ropensci.org/targets/}.
Please see the design specification at
\url{https://books.ropensci.org/targets-design/}
to learn about the structure and composition of target objects.
}
\description{
Target to run the \verb{$summary()} method of a \code{CmdStanFit} object.
}
\details{
\code{\link[=tar_stan_mcmc]{tar_stan_mcmc()}} etc. with \code{summary = TRUE} already gives you a
target with a \verb{$summary()} object.
Use \code{tar_stan_summary()} to create additional specialized summaries.
}
\examples{
# First, write your Stan model file, e.g. model.stan.
# Then in _targets.R, write a pipeline like this:
if (Sys.getenv("TAR_LONG_EXAMPLES") == "true") {
targets::tar_dir({ # tar_dir() runs code from a temporary directory.
targets::tar_script({
library(stantargets)
list(
  # Run a model and produce default summaries.
  tar_stan_mcmc(
    your_model,
    stan_files = "model.stan",
    data = tar_stan_example_data()
  ),
  # Produce a more specialized summary
  tar_stan_summary(
    your_summary,
    fit = your_model_mcmc_model,
    variables = "beta",
    summaries = list(~quantile(.x, probs = c(0.25, 0.75)))
  )
)}, ask = FALSE)
targets::tar_manifest()
})
}
}
