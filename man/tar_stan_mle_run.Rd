% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_stan_mle.R
\name{tar_stan_mle_run}
\alias{tar_stan_mle_run}
\title{Compile and run a Stan model and return a \code{CmdStanMLE} object.}
\usage{
tar_stan_mle_run(
  stan_file,
  data,
  compile,
  quiet,
  dir,
  include_paths,
  cpp_options,
  stanc_options,
  force_recompile,
  seed,
  refresh,
  init,
  save_latent_dynamics,
  output_dir,
  algorithm,
  init_alpha,
  iter,
  sig_figs,
  tol_obj,
  tol_rel_obj,
  tol_grad,
  tol_rel_grad,
  tol_param,
  history_size,
  variables
)
}
\arguments{
\item{stan_file}{Character, Stan model file or the lines of the file,
depending on \code{compile}.}

\item{data}{List of data to pass to the Stan model.}

\item{compile}{Character of length 1. If \code{"original"}, then
\code{cmdstan} will compile the source file right before running
it (or skip compilation if the binary is up to date). This
assumes the worker has access to the file. If the worker
is running on a remote computer that does not have access
to the model file, set to \code{"copy"} instead. \code{compile = "copy"}
means the pipeline will read the lines of the original Stan model file
and send them to the worker. The worker writes the lines
to a local copy and compiles the model from there, so it
no longer needs access to the original Stan model file on your
local machine. However, as a result, the Stan model re-compiles
every time the main target reruns.}

\item{seed}{\code{seed} argument to \verb{$optimize()}.}

\item{refresh}{\code{refresh} argument to \verb{$optimize()}.}

\item{init}{\code{init} argument to \verb{$optimize()}.}

\item{save_latent_dynamics}{\code{save_latent_dynamics}
argument to \verb{$optimize()}.}

\item{output_dir}{\code{output_dir} argument to \verb{$optimize()}.}

\item{algorithm}{\code{algorithm} argument to \verb{$optimize()}.}

\item{init_alpha}{\code{init_alpha} argument to \verb{$optimize()}.}

\item{iter}{\code{iter} argument to \verb{$optimize()}.}

\item{sig_figs}{\code{sig_figs} argument to \verb{$optimize()}.}

\item{tol_obj}{\code{tol_obj} argument to \verb{$optimize()}.}

\item{tol_rel_obj}{\code{tol_rel_obj} argument to \verb{$optimize()}.}

\item{tol_grad}{\code{tol_grad} argument to \verb{$optimize()}.}

\item{tol_rel_grad}{\code{tol_rel_grad} argument to \verb{$optimize()}.}

\item{tol_param}{\code{tol_param} argument to \verb{$optimize()}.}

\item{history_size}{\code{history_size} argument to \verb{$optimize()}.}

\item{variables}{\code{variables} argument to \verb{$draws()} and \verb{$summary()}
on the \code{CmdStanMLE} object.}
}
\value{
A \code{CmdStanFit} object.
}
\description{
Not a user-side function. Do not invoke directly.
}
\keyword{internal}
